- name: Setup Docker and Python on Application instance
  hosts: appserver
  become: true
  gather_facts: true
  vars_files:
    - vault_key.yml

  pre_tasks:
    - name: Write decoded SSH private key to /tmp/auth.pem on remote
      copy:
        content: "{{ vault_ssh_private_key }}"
        dest: /tmp/auth.pem
        mode: "0600"
      run_once: true

  tasks:
    - name: Ping machines
      ping:

    - name: Update and upgrade apt packages
      apt:
        update_cache: yes
        upgrade: yes
        cache_valid_time: 3600

    - name: Install required packages for Docker repo
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present

    - name: Ensure /etc/apt/keyrings exists
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: "0755"

    - name: Add Docker GPG key
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: "0644"
        force: no

    - name: Add Docker APT repository
      apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_facts.lsb.codename }} stable"
        state: present
        filename: docker

    - name: Install Docker packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Enable and start Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Ensure group "docker" exists
      group:
        name: docker
        state: present

    - name: Add 'ubuntu' user to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes

    - name: Install docker-compose binary
      get_url:
        url: https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: "0755"
        force: no # donâ€™t overwrite if already installed

    - name: Ensure Python 3 is installed
      apt:
        name: python3
        state: present

    - name: Disable root SSH login
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^PermitRootLogin"
        line: "PermitRootLogin no"
      notify: Restart SSH

    - name: Set password expiration policy
      lineinfile:
        path: /etc/login.defs
        regexp: "^PASS_MAX_DAYS"
        line: "PASS_MAX_DAYS 90"

    - name: Install fail2ban
      apt:
        name: fail2ban
        state: present

    - name: Create DevOps user
      user:
        name: devops
        shell: /bin/bash
        state: present

    # - name: Copy docker-compose file
    #   copy:
    #     src: ./docker-compose.yml
    #     dest: /home/ubuntu/docker-compose.yml
    #     owner: ubuntu
    #     group: ubuntu
    #     mode: "0644"

    # - name: Copy Dockerfile for Jenkins
    #   copy:
    #     src: ./Dockerfile # your local path to Jenkins Dockerfile
    #     dest: /home/ubuntu/Dockerfile
    #     owner: ubuntu
    #     group: ubuntu
    #     mode: "0644"

    # - name: Copy nginx.conf
    #   copy:
    #     src: ./nginx.conf # local path in your repo
    #     dest: /home/ubuntu/nginx.conf
    #     owner: ubuntu
    #     group: ubuntu
    #     mode: "0644"

    # - name: Start services with docker-compose
    #   command: docker-compose -f /home/ubuntu/docker-compose.yml up -d
    #   args:
    #     chdir: /home/ubuntu

  handlers:
    - name: Restart SSH
      systemd:
        name: ssh
        state: restarted
